diff -Naur bluez/audio/headset.c bluez.new/audio/headset.c
--- bluez/audio/headset.c	2013-11-04 15:53:29.779671444 +0800
+++ bluez.new/audio/headset.c	2013-11-04 15:53:22.971671728 +0800
@@ -2820,7 +2820,8 @@
 	return 0;
 }
 
-int telephony_incoming_call_ind(const char *number, int type)
+int telephony_incoming_call_ind(const char *number, int type,
+				gboolean suppress_ring)
 {
 	struct audio_device *dev;
 	struct headset *hs;
@@ -2857,6 +2858,11 @@
 		return 0;
 	}
 
+	if (suppress_ring) {
+		DBG("Suppressing ring signalling.");
+		return 0;
+	}
+
 	ring_timer_cb(NULL);
 	ag.ring_timer = g_timeout_add_seconds(RING_INTERVAL, ring_timer_cb,
 						NULL);
diff -Naur bluez/audio/telephony-dummy.c bluez.new/audio/telephony-dummy.c
--- bluez/audio/telephony-dummy.c	2013-11-04 15:54:33.263668798 +0800
+++ bluez.new/audio/telephony-dummy.c	2013-11-04 15:53:22.971671728 +0800
@@ -258,7 +258,7 @@
 	active_call_status = CALL_STATUS_INCOMING;
 	active_call_dir = CALL_DIR_INCOMING;
 
-	telephony_incoming_call_ind(number, NUMBER_TYPE_TELEPHONY);
+	telephony_incoming_call_ind(number, NUMBER_TYPE_TELEPHONY, FALSE);
 
 	return dbus_message_new_method_return(msg);
 }
diff -Naur bluez/audio/telephony.h bluez.new/audio/telephony.h
--- bluez/audio/telephony.h	2013-11-04 15:54:33.263668798 +0800
+++ bluez.new/audio/telephony.h	2013-11-04 15:53:22.971671728 +0800
@@ -197,7 +197,8 @@
 /* Event indications by AG. These are implemented by headset.c */
 int telephony_event_ind(int index);
 int telephony_response_and_hold_ind(int rh);
-int telephony_incoming_call_ind(const char *number, int type);
+int telephony_incoming_call_ind(const char *number, int type,
+				gboolean suppress_ring);
 int telephony_calling_stopped_ind(void);
 int telephony_ready_ind(uint32_t features, const struct indicator *indicators,
 			int rh, const char *chld);
diff -Naur bluez/audio/telephony-maemo5.c bluez.new/audio/telephony-maemo5.c
--- bluez/audio/telephony-maemo5.c	2013-11-04 15:54:33.263668798 +0800
+++ bluez.new/audio/telephony-maemo5.c	2013-11-04 15:53:22.971671728 +0800
@@ -490,7 +490,8 @@
 						number_type(coming->number));
 		else
 			telephony_incoming_call_ind(coming->number,
-						number_type(coming->number));
+						number_type(coming->number),
+						FALSE);
 	}
 }
 
@@ -945,7 +946,8 @@
 						number_type(call->number));
 	else
 		telephony_incoming_call_ind(call->number,
-						number_type(call->number));
+						number_type(call->number),
+						FALSE);
 }
 
 static void handle_outgoing_call(DBusMessage *msg)
diff -Naur bluez/audio/telephony-maemo6.c bluez.new/audio/telephony-maemo6.c
--- bluez/audio/telephony-maemo6.c	2013-11-04 15:54:33.267668798 +0800
+++ bluez.new/audio/telephony-maemo6.c	2013-11-04 15:53:22.971671728 +0800
@@ -574,7 +574,8 @@
 						number_type(coming->number));
 		else
 			telephony_incoming_call_ind(coming->number,
-						number_type(coming->number));
+						number_type(coming->number),
+						FALSE);
 	}
 }
 
@@ -1173,7 +1174,8 @@
 						number_type(call->number));
 	else
 		telephony_incoming_call_ind(call->number,
-						number_type(call->number));
+						number_type(call->number),
+						FALSE);
 
 	telephony_update_indicator(maemo_indicators, "callsetup",
 					EV_CALLSETUP_INCOMING);
@@ -1287,7 +1289,8 @@
 		 * answer incoming call that was previously waiting. */
 		if (prev_status == CSD_CALL_STATUS_WAITING)
 			telephony_incoming_call_ind(call->number,
-						number_type(call->number));
+						number_type(call->number),
+						FALSE);
 		break;
 	case CSD_CALL_STATUS_WAITING:
 		break;
diff -Naur bluez/audio/telephony-ofono.c bluez.new/audio/telephony-ofono.c
--- bluez/audio/telephony-ofono.c	2013-11-04 15:54:33.323668795 +0800
+++ bluez.new/audio/telephony-ofono.c	2013-11-04 15:53:22.971671728 +0800
@@ -55,6 +55,7 @@
 	guint watch;
 
 	gboolean hold_status_pending;
+	gboolean waiting_for_answer;
 };
 
 static DBusConnection *connection = NULL;
@@ -110,6 +111,24 @@
 	{ NULL }
 };
 
+static void waiting_for_answer_clear(struct voice_call *vc)
+{
+	DBG("");
+	vc->waiting_for_answer = FALSE;
+}
+
+static void waiting_for_answer_set(struct voice_call *vc)
+{
+	DBG("");
+	vc->waiting_for_answer = TRUE;
+}
+
+static gboolean waiting_for_answer_is_set(struct voice_call *vc)
+{
+	DBG("%s", vc->waiting_for_answer ? "TRUE" : "FALSE");
+	return vc->waiting_for_answer;
+}
+
 static void hold_status_clear(struct voice_call *vc)
 {
 	vc->hold_status_pending = FALSE;
@@ -204,7 +223,8 @@
 						number_type(coming->number));
 		else
 			telephony_incoming_call_ind(coming->number,
-						number_type(coming->number));
+						number_type(coming->number),
+						FALSE);
 	}
 }
 
@@ -322,13 +342,40 @@
 						NULL, NULL, DBUS_TYPE_INVALID);
 }
 
+static void answer_waiting_call(void)
+{
+	GSList *l;
+
+	DBG("");
+
+	for (l = calls; l != NULL; l = l->next) {
+		struct voice_call *vc = l->data;
+		if (waiting_for_answer_is_set(vc) == TRUE) {
+			answer_call(vc);
+			break;
+		}
+	}
+}
+
 static int release_answer_calls(void)
 {
-	DBG("%s", modem_obj_path);
-	return send_method_call(OFONO_BUS_NAME, modem_obj_path,
-						OFONO_VCMANAGER_INTERFACE,
-						"ReleaseAndAnswer",
-						NULL, NULL, DBUS_TYPE_INVALID);
+	struct voice_call *active = NULL;
+	struct voice_call *waiting = NULL;
+
+	DBG("");
+
+	active = find_vc_with_status(CALL_STATUS_ACTIVE);
+	waiting = find_vc_with_status(CALL_STATUS_WAITING);
+	if (active == NULL || waiting == NULL)
+		return -EIO;
+
+	/* Answer this call when the current call has disconnected */
+	waiting_for_answer_set(waiting);
+
+	return send_method_call(OFONO_BUS_NAME, active->obj_path,
+						OFONO_VC_INTERFACE, "Hangup",
+						NULL, NULL,
+						DBUS_TYPE_INVALID);
 }
 
 static int release_swap_calls(void)
@@ -874,6 +921,9 @@
 		if (g_str_equal(state, "disconnected")) {
 			calls = g_slist_remove(calls, vc);
 			call_free(vc);
+			/* Answer waiting call if the disconnect was part
+			   of release and answer (AT+CHLD=1) processing */
+			answer_waiting_call();
 		} else if (g_str_equal(state, "active")) {
 			telephony_update_indicator(ofono_indicators,
 							"call", EV_CALL_ACTIVE);
@@ -893,7 +943,9 @@
 			telephony_update_indicator(ofono_indicators,
 					"callsetup", EV_CALLSETUP_INCOMING);
 			telephony_incoming_call_ind(vc->number,
-						NUMBER_TYPE_TELEPHONY);
+						NUMBER_TYPE_TELEPHONY,
+						waiting_for_answer_is_set(vc));
+			waiting_for_answer_clear(vc);
 			vc->status = CALL_STATUS_INCOMING;
 			vc->originating = FALSE;
 		} else if (g_str_equal(state, "held")) {
@@ -967,7 +1019,8 @@
 		vc->originating = FALSE;
 		telephony_update_indicator(ofono_indicators, "callsetup",
 					EV_CALLSETUP_INCOMING);
-		telephony_incoming_call_ind(vc->number, NUMBER_TYPE_TELEPHONY);
+		telephony_incoming_call_ind(vc->number, NUMBER_TYPE_TELEPHONY,
+			FALSE);
 		break;
 	case CALL_STATUS_DIALING:
 		DBG("CALL_STATUS_DIALING");
